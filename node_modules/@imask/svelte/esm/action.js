import IMask from 'imask/esm/imask';

function fireEvent(el, eventName, data) {
  const e = document.createEvent('CustomEvent');
  e.initCustomEvent(eventName, true, true, data);
  el.dispatchEvent(e);
}
function initMask(el, opts) {
  const maskRef = opts instanceof IMask.InputMask ? opts : IMask(el, opts);
  return maskRef.on('accept', () => fireEvent(el, 'accept', maskRef)).on('complete', () => fireEvent(el, 'complete', maskRef));
}
function IMaskAction(el, opts) {
  let maskRef = opts && initMask(el, opts);
  function destroy() {
    if (maskRef) {
      maskRef.destroy();
      maskRef = undefined;
    }
  }
  function update(opts) {
    if (!opts) return destroy();
    if (opts instanceof IMask.InputMask) maskRef = opts;else if (maskRef) maskRef.updateOptions(opts);else maskRef = initMask(el, opts);
  }
  return {
    update,
    destroy
  };
}

export { IMaskAction as default };
