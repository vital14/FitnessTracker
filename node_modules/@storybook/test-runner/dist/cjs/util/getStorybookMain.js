"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStorybookMain = void 0;
exports.resetStorybookMainCache = resetStorybookMainCache;
var _path = require("path");
var _coreCommon = require("@storybook/core-common");
var _tsDedent = _interopRequireDefault(require("ts-dedent"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
let storybookMainConfig = new Map();
const getStorybookMain = configDir => {
  if (storybookMainConfig.has(configDir)) {
    return storybookMainConfig.get(configDir);
  } else {
    storybookMainConfig.set(configDir, (0, _coreCommon.serverRequire)((0, _path.join)((0, _path.resolve)(configDir), 'main')));
  }
  const mainConfig = storybookMainConfig.get(configDir);
  if (!mainConfig) {
    throw new Error(`Could not load main.js in ${configDir}. Is the config directory correct? You can change it by using --config-dir <path-to-dir>`);
  }
  if (!mainConfig.stories || mainConfig.stories.length === 0) {
    throw new Error((0, _tsDedent.default)`
        Could not find stories in main.js in ${configDir}. 
        If you are using a mono-repository, please run the test-runner only against your sub-package, which contains a .storybook folder with "stories" defined in main.js.
        You can change the config directory by using --config-dir <path-to-dir>
        `);
  }
  return mainConfig;
};
exports.getStorybookMain = getStorybookMain;
function resetStorybookMainCache() {
  storybookMainConfig.clear();
}